[[ -f $HOME/.zsh_profile ]] && source $HOME/.zsh_profile

# ---- Custom PATH extensions ----
export PATH="$PATH:/home/alucbert/.dotnet/tools"
export PATH="$PATH:/home/alucbert/.local/share/gem/ruby/3.0.0/bin"
export PATH="$PATH:/home/alucbert/perl5/bin"

# ---- Android stuff ----
export JAVA_HOME=/usr/lib/jvm/default
export ANDROID_HOME=/opt/android-sdk
export ANDROID_NDK_ROOT=/opt/android-ndk
export ANDROID_SDK_ROOT=$HOME/Android/Sdk
export PATH=$PATH:$ANDROID_SDK_ROOT/emulator
export PATH=$PATH:$ANDROID_SDK_ROOT/platform-tools

# ---- Misc environment ----
export ZSH="/home/alucbert/.oh-my-zsh"
export EDITOR=nvim

## perl environment
export PERL5LIB="$PERL5LIB:/home/alucbert/perl5/lib/perl5"
export PERL_LOCAL_LIB_ROOT="$PERL_LOCAL_LIB_ROOT:/home/alucbert/perl5"
export PERL_MB_OPT="--install_base \"/home/alucbert/perl5\""
export PERL_MM_OPT="INSTALL_BASE=/home/alucbert/perl5"

# ---- Zsh configuration ----
ZSH_THEME="robbyrussell"
ENABLE_CORRECTION="false"

plugins=(
  zsh-autosuggestions
  git
  docker
)

source $ZSH/oh-my-zsh.sh
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

## enable vi mode
bindkey -v
export KEYTIMEOUT=1

## autocomplete plugins
[[ -f ~/.config/tabtab/__tabtab.zsh ]] && . ~/.config/tabtab/__tabtab.zsh || true
autoload bashcompinit && bashcompinit
autoload -Uz compinit && compinit
complete -C '/usr/bin/aws_completer' aws

# ---- Aliases ----
## autoremove unneeded dependencies
alias autoremove="sudo pacman -Rns \$(pacman -Qtdq)"

## Refresh font cache
alias font-refresh="fc-cache -fv"

## merge Xresources, useful for urxvt & rofi theming
alias merge="xrdb ~/.Xresources"

alias zshconf="$EDITOR ~/.zshrc"
alias i3conf="$EDITOR ~/.config/i3/config"
alias vimconf="$EDITOR ~/.config/nvim"

alias c="clear"
alias locate="find . | ag"

## make shortcuts
alias makef='make fclean'
alias makec='make clean'
alias maked='make debug'
alias maker='make re'

alias lines='cloc --exclude-dir=build,deps --exclude-ext=json .'

alias fixbt="pacmd set-card-profile bluez_card.70_BF_92_01_DB_57 a2dp_sink"
alias btctl="bluetoothctl"

alias jq="jq -C"
alias cp="rsync -az --info=progress2 --no-inc-recursive" 

alias colortest="npx colortest"

## receive missing gpg key
alias gpgrecv="gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys"

alias dotdrop="DOTDROP_CONFIG=$HOME/dotdrop/dotdrop/config.yaml dotdrop"

alias luamake=/home/alucbert/install/lua-language-server/3rd/luamake/luamake

alias psh="poetry shell"

# confirm prompt
confirm()
{
	printf "${1:-"Are you sure?"} [Y/n] " \
	&& read confirm \
	&& (
		setopt -s nocasematch
		[[ $confirm =~ ^((y(e|es)?)|)$ ]]
	)
}

# open a temporary file in nvim with the given extension
tmp()
{
	ext=${1:-md}
	file=`mktemp --suffix=.$ext`
	nvim $file && confirm "Delete buffer?" && rm $file || echo $file
}

alias screen="screen -h 1000"

# ---- Programs configuration and custom commands ----
# cmake() {
#   /usr/bin/cmake $1 -GNinja -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ ${@:2}
# }

visum() {
  bash /usr/share/visum/scripts/visum.sh $@
}

[ -f /opt/asdf-vm/asdf.sh ] && source /opt/asdf-vm/asdf.sh

## conda
__conda_setup="$('/opt/anaconda/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/anaconda/etc/profile.d/conda.sh" ]; then
        . "/opt/anaconda/etc/profile.d/conda.sh"
    else
        export PATH="/opt/anaconda/bin:$PATH"
    fi
fi
unset __conda_setup

nbc()
{
  (set -o pipefail; \ninja $@ 2>&1 | colout -t g++ | colout -t ninja)
}

valgrind()
{
  (set -o pipefail; /usr/bin/valgrind $@ 2>&1 | colout -t valgrind)
}

csv()
{
  if [ -z "$1" ]; then
    >&2 echo "Open a CSV file in your terminal"
    >&2 echo "Usage: csv filename [delimiter]"
    return 1
  fi
  column -t -s${2:-,} $1 | less
}
